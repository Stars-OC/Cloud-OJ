<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cloud.oj.judge.dao.RankingDao">
    <!-- 提交次数 + 1 -->
    <insert id="incCommitted">
        insert into leaderboard
        set uid   = #{uid},
            committed = committed + 1,
            update_time = #{time}
        on duplicate key update committed = committed + 1
    </insert>
    <!-- 提交次数 + 1 (竞赛) -->
    <insert id="incCommittedForContest">
        insert into leaderboard_contest
        set uid         = #{uid},
            contest_id  = #{contestId},
            committed   = committed + 1,
            update_time = #{time}
        on duplicate key update committed = committed + 1
    </insert>
    <!-- 更新排名 -->
    <insert id="update">
        replace into leaderboard(uid, committed, passed, score, update_time)
        select #{uid}                                        as uid,
               sum(committed)                                as committed,
               count((case when (pass_rate = 1) then 1 end)) as passed,
               sum(score)                                    as score,
               #{time}                                       as update_time
        from (select count(problem_id) as committed,
                     max(pass_rate)    as pass_rate,
                     max(score)        as score
              from solution
              where contest_id is null
                and uid = #{uid}
              group by problem_id) as user_score;
    </insert>
    <!-- 更新竞赛排名 -->
    <insert id="updateForContest">
        replace into leaderboard_contest(uid, contest_id, committed, passed, score, update_time)
        select #{uid}                                        as uid,
               #{contestId}                                  as contest_id,
               sum(committed)                                as committed,
               count((case when (pass_rate = 1) then 1 end)) as passed,
               sum(score)                                    as score,
               #{time}                                       as update_time
        from (select count(problem_id) as committed,
                     max(pass_rate)    as pass_rate,
                     max(score)        as score
              from solution
              where contest_id = #{contestId}
                and uid = #{uid}
              group by problem_id) as user_score;
    </insert>
</mapper>