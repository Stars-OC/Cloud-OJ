<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cloud.oj.core.dao.ContestDao">
    <!-- 查询竞赛状态 -->
    <select id="getState" resultType="cloud.oj.core.entity.Contest">
        select contest_id,
               if(start_at &lt;= now(), true, false) as started,
               if(end_at &lt;= now(), true, false)   as ended
        from contest
        where contest_id = #{contestId}
    </select>
    <!-- 查询已开始竞赛 -->
    <select id="getStarted" resultMap="Map.Contest, Map.Total">
        select sql_calc_found_rows c.contest_id as contest_id,
                                   contest_name,
                                   languages,
                                   start_at,
                                   end_at,
                                   if(start_at &lt;= unix_timestamp(), true, false) as started,
                                   if(end_at &lt;= unix_timestamp(), true, false)   as ended,
                                   count(cp.problem_id)                             as problem_count
        from contest c
                 left join `contest-problem` cp on c.contest_id = cp.contest_id
        where c.deleted = false
          and start_at &lt;= unix_timestamp(now())
        group by c.contest_id
        order by started desc, ended
        limit #{start}, #{limit};
        select found_rows()
    </select>
    <!-- 查询所有竞赛 -->
    <select id="getAll" resultMap="Map.Contest, Map.Total">
        select sql_calc_found_rows c.contest_id                                     as contest_id,
                                   contest_name,
                                   if(#{admin}, invite_key, null)                   as invite_key,
                                   languages,
                                   start_at,
                                   end_at,
                                   create_at,
                                   if(start_at &lt;= unix_timestamp(), true, false) as started,
                                   if(end_at &lt;= unix_timestamp(), true, false)   as ended,
                                   count(cp.problem_id)                             as problem_count
        from contest c
                 left join `contest-problem` cp on c.contest_id = cp.contest_id
        where c.deleted = false
        group by c.contest_id
        order by started desc, ended
        limit #{start}, #{limit};
        select found_rows()
    </select>
    <!-- 查询已开始竞赛中的题目 -->
    <select id="getProblemsInStarted" resultType="cloud.oj.core.entity.Problem">
        select contest_id,
               contest_name,
               start_at,
               end_at,
               problem_id,
               title,
               score
        from contest_problem cp
        where cp.contest_id = #{contestId}
          and cp.start_at &lt;= unix_timestamp(now())
        order by `order`, problem_id
    </select>
    <!-- 查询竞赛中的题目 -->
    <select id="getProblems" resultType="cloud.oj.core.entity.Problem">
        select contest_id,
               contest_name,
               start_at,
               end_at,
               problem_id,
               title,
               score
        from contest_problem cp
        where cp.contest_id = #{contestId}
        order by `order`, problem_id
    </select>
    <!-- 查询不在指定竞赛中的所有题目 -->
    <select id="getProblemsNotInContest" resultMap="Map.Problem, Map.Total">
        select sql_calc_found_rows *
        from problem
        where deleted = false
          and enable = false
          and problem_id not in (select problem_id from contest_problem where contest_id = #{contestId})
        limit #{start}, #{limit};
        select found_rows()
    </select>
    <!-- 根据 id 查询竞赛 -->
    <select id="getContestById" resultMap="Map.Contest">
        select *,
               if(start_at &lt;= unix_timestamp(now()), true, false) as started,
               if(end_at &lt;= unix_timestamp(now()), true, false)   as ended
        from contest
        where contest_id = #{contestId}
          and deleted = false
    </select>
    <!-- 增加竞赛 -->
    <insert id="createContest" parameterType="cloud.oj.core.entity.Contest">
        insert into contest(contest_name, invite_key, start_at, end_at, languages)
            value (#{contestName}, #{inviteKey}, #{startAt}, #{endAt}, #{languages})
    </insert>
    <!-- 更新竞赛信息 -->
    <update id="updateContest" parameterType="cloud.oj.core.entity.Contest">
        update contest
        set contest_name = #{contestName},
            start_at     = #{startAt},
            end_at       = #{endAt},
            languages    = #{languages}
        where contest_id = #{contestId}
    </update>
    <!-- 逻辑删除竞赛 -->
    <update id="deleteContest">
        update contest
        set deleted = true
        where contest_id = #{contestId}
    </update>
    <!-- 向竞赛增加题目 -->
    <insert id="addProblem">
        insert into `contest-problem`(contest_id, problem_id)
            value (#{contestId}, #{problemId})
    </insert>
    <!-- 从竞赛移除题目 -->
    <delete id="removeProblem">
        delete
        from `contest-problem`
        where contest_id = #{contestId}
          and problem_id = #{problemId}
    </delete>
</mapper>