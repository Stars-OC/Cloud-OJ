<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cloud.oj.core.dao.UserDao">
    <!-- 根据过滤条件查询用户 -->
    <select id="getByFilter" resultMap="Map.User, Map.Total">
        select sql_calc_found_rows uid,
                                   username,
                                   nickname,
                                   email,
                                   section,
                                   has_avatar,
                                   star,
                                   role,
                                   create_at
        from user
        where deleted = false
          and if(#{filter} = 1, username like concat(#{filterValue}, '%'), true)
          and if(#{filter} = 2, nickname like concat('%', #{filterValue}, '%'), true)
        order by role, create_at
        limit #{start},#{limit};
        select found_rows()
    </select>
    <!-- 根据 id 查询用户 -->
    <select id="getById" resultMap="Map.User">
        select uid,
               username,
               nickname,
               email,
               section,
               has_avatar,
               star
        from user
        where uid = #{uid}
          and deleted = false
    </select>
    <select id="exists" resultType="java.lang.Boolean">
        select 1 from user where username = #{username}
    </select>
    <!-- 增加用户 -->
    <insert id="add" parameterType="cloud.oj.core.entity.User">
        insert into `user`(username, nickname, password, secret, email, section, role)
            value (#{username}, #{nickname}, #{password}, #{secret}, #{email}, #{section}, #{role})
    </insert>
    <!-- 更新用户信息 -->
    <update id="update" parameterType="cloud.oj.core.entity.User">
        update user
        set nickname = #{nickname},
        <choose>
            <when test="password != null">
                password = #{password},
            </when>
        </choose>
        <choose>
            <when test="role != null">
                role = #{role},
            </when>
        </choose>
        <choose>
            <when test="secret != null">
                secret = #{secret},
            </when>
        </choose>
        star = #{star},
        email = #{email},
        section = #{section}
        where uid = #{uid}
    </update>
    <!-- 设置为有头像 -->
    <update id="updateAvatar">
        update user
        set has_avatar = true
        where uid = #{uid}
    </update>
    <!-- 逻辑删除用户 -->
    <update id="delete">
        update user
        set deleted = true
        where uid = #{uid}
    </update>
    <!-- 查询用户的语言使用情况 -->
    <select id="getLanguagePreference" resultType="java.util.Map">
        select language, count(solution_id) as count
        from solution
        where contest_id is null
          and uid = #{uid}
        group by language
    </select>
    <!-- 查询用户某一年的提交情况 -->
    <select id="getActivities" resultType="java.util.Map">
        select DATE_FORMAT(from_unixtime(submit_time / 1000), '%Y-%m-%d') as date,
               count(problem_id)                                          as count
        from (select problem_id, submit_time
              from solution
              where contest_id is null
                and uid = #{uid}
                and year(from_unixtime(submit_time / 1000)) = #{year}
                and result = 'AC'
              group by problem_id, submit_time) s
        group by date
    </select>
    <!-- 查询用户所有提交的结果统计信息 -->
    <select id="getResultStatistics" resultType="java.util.Map">
        select count(result = 'AC' or null)  as AC,
               count(result = 'WA' or null)  as WA,
               count(result = 'TLE' or null) as TLE,
               count(result = 'MLE' or null) as MLE,
               count(result = 'RE' or null)  as RE,
               count(result = 'CE' or null)  as CE,
               count(solution_id)            as total
        from solution
        where uid = #{uid}
          and contest_id is null
          and result &lt;&gt; 'JUDGE_ERROR'
    </select>
</mapper>