<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cloud.oj.core.dao.ProblemDao">
    <select id="getAll" resultMap="Map.Problem, Map.Total">
        select sql_calc_found_rows problem_id,
                                   title,
                                   enable,
                                   category as category,
                                   score,
                                   create_at
        from problem
        where if(#{keyword} is not null,
                 title like concat(#{keyword}, '%') or find_in_set(#{keyword}, category),
                 true)
        limit #{start}, #{limit};
        select found_rows()
    </select>
    <select id="getAllEnabled" resultMap="Map.Problem, Map.Total">
        select sql_calc_found_rows problem_id,
                                   title,
                                   enable,
                                   category,
                                   score,
                                   create_at
        from problem
        where if(#{keyword} is not null,
                 enable = true and title like concat(#{keyword}, '%') or find_in_set(#{keyword}, category),
                 enable = true)
        limit #{start}, #{limit};
        select found_rows()
    </select>
    <select id="getSingle" resultMap="Map.Problem">
        select problem_id,
        title,
        description,
        timeout,
        memory_limit,
        output_limit,
        score,
        category
        from problem
        where
        <if test="enable == true">
            enable = true and
        </if>
        problem_id = #{problemId}
    </select>
    <select id="getSingleInContest" resultMap="Map.Problem">
        select problem_id,
               title,
               description,
               timeout,
               memory_limit,
               output_limit,
               score,
               category,
               languages
        from contest_problem
        where contest_id = #{contestId}
          and start_at &lt;= now()
          and problem_id = #{problemId}
    </select>
    <insert id="add" parameterType="cloud.oj.core.entity.Problem" useGeneratedKeys="true" keyColumn="problem_id"
            keyProperty="problemId">
        insert into problem(title,
                            description,
                            category,
                            score,
                            timeout,
                            memory_limit,
                            output_limit)
            value (#{title},
                   #{description},
                   #{category},
                   #{score},
                   #{timeout},
                   #{memoryLimit},
                   #{outputLimit})
    </insert>
    <update id="update" parameterType="cloud.oj.core.entity.Problem">
        update problem
        set title        = #{title},
            description  = #{description},
            score        = #{score},
            timeout      = #{timeout},
            memory_limit = #{memoryLimit},
            output_limit = #{outputLimit},
            category     = #{category}
        where problem_id = #{problemId}
    </update>
    <select id="isInContest" resultType="java.lang.Integer">
        select contest_id
        from `contest-problem`
        where problem_id = #{problemId}
        limit 1;
    </select>
    <delete id="delete">
        delete
        from problem
        where problem_id = #{problemId}
    </delete>
    <update id="toggleEnable">
        update problem
        set enable = #{enable}
        where problem_id = #{problemId}
    </update>
</mapper>