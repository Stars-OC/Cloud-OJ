<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cloud.oj.core.dao.RankingDao">
    <!-- 查询排名 -->
    <select id="get" resultMap="Map.Ranking, Map.Total">
        select sql_calc_found_rows (@ranking := @ranking + 1) as `rank`,
                                   u.uid,
                                   u.username,
                                   u.nickname,
                                   u.has_avatar,
                                   committed,
                                   passed,
                                   truncate(score, 2)         as score
        from scoreboard l
                 join user u on l.deleted = false and l.uid = u.uid,
             (select @ranking := #{start}) rn
        where u.role = 1
          and score &gt; 0
        order by score desc, update_time
        limit #{start}, #{limit};
        select found_rows();
    </select>
    <!-- 查询指定竞赛的排名 -->
    <select id="getForContest" resultType="cloud.oj.core.entity.Ranking">
        select (@ranking := @ranking + 1) as `rank`,
               u.uid,
               u.username,
               u.nickname,
               u.has_avatar,
               committed,
               passed,
               truncate(score, 2)         as score
        from scoreboard_contest lc
                 join user u on lc.deleted = false and lc.uid = u.uid,
             (select @ranking := 0) rn
        where contest_id = #{contestId}
          and u.role = 1
          and score &gt; 0
        order by score desc, update_time
    </select>
    <!-- 查询用户在指定竞赛中的分数构成 -->
    <select id="getDetail" resultType="cloud.oj.core.entity.ScoreDetail">
        select *
        from (select problem_id,
                     result - 1                                                  as result,
                     truncate(score, 2)                                          as score,
                     row_number() over (partition by problem_id order by result) as rn
              from solution
              where contest_id = #{cid}
                and uid = #{uid}
                and state = 1) t
        where rn = 1
        order by problem_id
    </select>
    <!-- 根据用户 id 逻辑删除排名 -->
    <update id="deleteByUser">
        update scoreboard
        set deleted = true
        where uid = #{uid}
    </update>
</mapper>
