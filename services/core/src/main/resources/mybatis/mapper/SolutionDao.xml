<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cloud.oj.core.dao.SolutionDao">
    <!-- 根据 uid 和提交时间查询提交 -->
    <select id="getSolutionByUidAndTime" resultMap="Map.Solution">
        set tx_isolation = 'read-uncommitted';
        select state - 1                                      as state,
               result - 1                                     as result,
               truncate(pass_rate, 2)                         as pass_rate,
               truncate(score, 2)                             as score,
               case when #{showPassed} = true then total end  as total,
               case when #{showPassed} = true then passed end as passed,
               time,
               memory,
               error_info
        from solution
        where uid = #{uid}
          and submit_time = #{time}
    </select>
    <select id="getSolution" resultMap="Map.Solution">
        select problem_id,
               title,
               language,
               state - 1                                      as state,
               result - 1                                     as result,
               truncate(pass_rate, 2)                         as pass_rate,
               truncate(score, 2)                             as score,
               case when #{showPassed} = true then total end  as total,
               case when #{showPassed} = true then passed end as passed,
               time,
               memory,
               submit_time,
               error_info
        from solution
        where solution_id = #{sid}
          and uid = #{uid}
          and deleted = 0
    </select>
    <!-- 查询用户的所有提交 -->
    <select id="getSolutionsByUser" resultMap="Map.Solution, Map.Total">
        select sql_calc_found_rows solution_id,
                                   problem_id,
                                   title,
                                   language,
                                   state - 1              as state,
                                   result - 1             as result,
                                   truncate(pass_rate, 2) as pass_rate,
                                   truncate(score, 2)     as score,
                                   time,
                                   memory,
                                   submit_time
        from solution
        where deleted = 0
          and uid = #{uid}
          and if(#{filter} = 1, problem_id = #{filterValue}, true)
          and if(#{filter} = 2, title like concat('%', #{filterValue}, '%'), true)
        order by submit_time desc
        limit #{start}, #{limit};
        select found_rows();
    </select>
    <!-- 更新标题字段 -->
    <update id="updateTitle">
        update solution
        set title = #{title}
        where problem_id = #{pid}
    </update>
    <!-- 根据用户 id 逻辑删除提交 -->
    <update id="deleteByUser">
        update solution
        set deleted = true
        where uid = #{uid}
    </update>
</mapper>
