#!/bin/bash
set -e
SCRIPT=$(readlink -f "$0")
ROOT_DIR=$(dirname "${SCRIPT}")

cd "${ROOT_DIR}"

function has_command() {
  which "$1" &>/dev/null
}

function info() {
  echo -e "\e[32m$1\e[0m"
}

function err() {
  echo -e "\e[31m$1\e[0m"
}

# clean && exit
if [ "$1" == "clean" ]; then
  if has_command mvn; then
    cd services && mvn clean && cd "${ROOT_DIR}"
  else
    err "command 'mvn' not found."
    exit 1
  fi
  if [ -d "judge/cmake-build-debug" ]; then
    rm -r judge/cmake-build-debug
  fi
  if [ -d "judge/cmake-build-release" ]; then
    rm -r judge/cmake-build-release
  fi
  if [ -d "web/dist" ]; then
    rm -r web/dist
  fi
  info "CLEAN COMPLETE"
  cd "${ROOT_DIR}"
  exit 0
fi

function vue_build() {
  if cd web && npm install && npm run build; then
    cd "${ROOT_DIR}"
  else
    cd "${ROOT_DIR}"
    err "NPM BUILD FAILED"
    exit 1
  fi
}

function cmake_build() {
  if cd judge && bash build; then
    cd "${ROOT_DIR}"
  else
    cd "${ROOT_DIR}"
    err "CMAKE BUILD FAILED"
    exit 1
  fi
}

function mvn_build() {
  if cd services && mvn clean -B package -pl "$1" '-Dmaven.test.skip=true'; then
    cd "${ROOT_DIR}"
  else
    cd "${ROOT_DIR}"
    err "MAVEN BUILD FAILED"
    exit 1
  fi
}

# build
if [ "$1" == "" ]; then
  info "BUILD START..."
  cmake_build
  mvn_build core,gateway,judge
  vue_build
  info "BUILD COMPLETE"
  exit 0
elif [ "$1" == "target" ]; then
  case "$2" in
  "web")
    vue_build
    ;;
  "core" | "gateway")
    mvn_build "$2"
    ;;
  "judge")
    cmake_build
    mvn_build "$2"
    ;;
  *)
    err "Invalid Target: $2"
    exit 1
    ;;
  esac
elif [ "$1" == "docker" ]; then
  # build docker images
  if ! (has_command docker); then
    err "docker not found!"
    exit 1
  fi
  if [ "$2" == "" ]; then
    docker build --target=core --build-arg="TARGET=core" -t cloud-oj:core .
    docker build --target=gateway --build-arg="TARGET=gateway" -t cloud-oj:gateway .
    docker build --target=judge --build-arg="TARGET=judge" -t cloud-oj:judge .
    docker build --target=web --build-arg="TARGET=web" -t cloud-oj:web .
    docker build -t cloud-oj:mariadb dev/sql
    docker images | grep cloudoj
    if [ ! -f "${HOME}/cloud-oj/compose.yml" ]; then
      mkdir -p "${HOME}/cloud-oj"
      cp -r docker/. "${HOME}/cloud-oj/"
    fi
  else
    case "$2" in
    "mariadb")
      docker build -t cloud-oj:mariadb dev/sql
      ;;
    "web")
      docker build --target=web --build-arg="TARGET=web" -t cloud-oj:web .
      ;;
    "core" | "gateway" | "judge")
      docker build --target="$2" --build-arg="TARGET=$2" -t cloud-oj:"$2" .
      ;;
    *)
      err "Invalid Target: $2"
      exit 1
      ;;
    esac
  fi
else
  err "Inlaid Arg"
  exit 1
fi
